[{"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\index.js":"1","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\App.js":"2","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\serviceWorker.js":"3","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\theme\\theme.js":"4","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\theme\\colours.js":"5","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\store\\Store.jsx":"6","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\home\\Home.jsx":"7","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\menuBar\\MenuBar.jsx":"8","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\Footer\\Footer.jsx":"9","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\services\\userService.js":"10","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\Notifications\\Notifications.js":"11","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\menuBar\\MenuBarNew.jsx":"12","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\notAuthorised\\NotAuthorised.jsx":"13","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\notFound\\NotFound.jsx":"14","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\constants\\serviceURLS.js":"15","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\services\\eventsService.js":"16","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\events\\NewEvent.jsx":"17","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\events\\Events.jsx":"18","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\events\\EventDetails.jsx":"19","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\profile\\Profile.jsx":"20","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\profile\\timeTransformer.js":"21","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\members\\Members.jsx":"22"},{"size":874,"mtime":1609605540197,"results":"23","hashOfConfig":"24"},{"size":2210,"mtime":1617207564922,"results":"25","hashOfConfig":"24"},{"size":5227,"mtime":1609514592941,"results":"26","hashOfConfig":"24"},{"size":497,"mtime":1609611263757,"results":"27","hashOfConfig":"24"},{"size":297,"mtime":1610733785526,"results":"28","hashOfConfig":"24"},{"size":385,"mtime":1609600614139,"results":"29","hashOfConfig":"24"},{"size":2223,"mtime":1619312717657,"results":"30","hashOfConfig":"24"},{"size":3222,"mtime":1609801303807,"results":"31","hashOfConfig":"24"},{"size":871,"mtime":1619298171188,"results":"32","hashOfConfig":"24"},{"size":782,"mtime":1617211114685,"results":"33","hashOfConfig":"24"},{"size":1056,"mtime":1610037612829,"results":"34","hashOfConfig":"24"},{"size":3891,"mtime":1619295617872,"results":"35","hashOfConfig":"24"},{"size":870,"mtime":1609982988250,"results":"36","hashOfConfig":"24"},{"size":872,"mtime":1610013445223,"results":"37","hashOfConfig":"24"},{"size":279,"mtime":1616615371183,"results":"38","hashOfConfig":"24"},{"size":650,"mtime":1611874391492,"results":"39","hashOfConfig":"24"},{"size":14860,"mtime":1619305966787,"results":"40","hashOfConfig":"24"},{"size":2453,"mtime":1619386359273,"results":"41","hashOfConfig":"24"},{"size":9077,"mtime":1619811484019,"results":"42","hashOfConfig":"24"},{"size":14686,"mtime":1619811645860,"results":"43","hashOfConfig":"24"},{"size":1442,"mtime":1617277795398,"results":"44","hashOfConfig":"24"},{"size":7875,"mtime":1619296046627,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1yy4u3x",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\index.js",[],["95","96"],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\App.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\serviceWorker.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\theme\\theme.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\theme\\colours.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\store\\Store.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\home\\Home.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\menuBar\\MenuBar.jsx",["97","98"],"import React, {useContext, useState, useEffect} from \"react\";\r\nimport './menubar.scss';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport { UserContext } from \"../../store/Store\";\r\nimport { Link } from 'react-router-dom'\r\nimport { getUser } from \"../../services/userService\";\r\nimport Notifications from \"../Notifications/Notifications\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nfunction MenuBar() {\r\n    const notifications = new Notifications();\r\n    const [userProfile, setUserProfile] = useContext(UserContext);\r\n    const [pageLoad] = useState(true)\r\n\r\n    useEffect( () => {\r\n        if (!userProfile){\r\n            console.log(userProfile)\r\n            getUser().then( ({ data }) => {\r\n                setUserProfile(data);\r\n                console.log(data);\r\n                notifications.sendToast('success', 5000, 'Success', 'Logged In...');\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n        }\r\n    }, [pageLoad])\r\n\r\n\r\n    const login = () => window.location.href = 'http://service.redwinegaming.com/api/auth/discord';\r\n\r\n    return (\r\n        <div id=\"menuBar\">\r\n            <header id=\"nav-wrapper\">\r\n                <nav id=\"nav\">\r\n                    <div className=\"nav left\">\r\n                            <span className=\"gradient skew\"><h1 className=\"logo un-skew\"><Link\r\n                                to=\"/\">[RWG]</Link></h1></span>\r\n                        <button id=\"menu\" className=\"btn-nav\"><span\r\n                            className=\"fas fa-bars\"></span></button>\r\n                    </div>\r\n                    { userProfile ?\r\n                        <div className=\"nav right\">\r\n                            <Link to=\"/\" className=\"nav-link active\"><span\r\n                                className=\"nav-link-span\"><span className=\"u-nav\">Home</span></span></Link>\r\n                            <Link to='/events' className=\"nav-link\"><span\r\n                                className=\"nav-link-span\"><span\r\n                                className=\"u-nav\">Events</span></span></Link>\r\n                            <Link to=\"/\" className=\"nav-link\"><span\r\n                                className=\"nav-link-span\"><span className=\"u-nav\">Members</span></span></Link>\r\n                            <Link to=\"/\" className=\"nav-link profile\"><span className=\"nav-link-span\"><span\r\n                                className=\"u-nav\">{userProfile.userName} <Avatar id=\"accountCircle\" alt={userProfile.userName} src={`https://cdn.discordapp.com/avatars/${userProfile._id}/${userProfile.avatar}`}/> </span></span></Link>\r\n                        </div>\r\n                        :\r\n                        <div className=\"nav right\">\r\n                            <a href=\"#\"  onClick={login} className=\"nav-link\"><span className=\"nav-link-span\"><span\r\n                                className=\"u-nav\">Login  </span><AccountCircle id=\"defaultAccountCircle\"\r\n                                                                               fontSize=\"default\"/></span></a>\r\n                        </div>\r\n                    }\r\n\r\n                </nav>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuBar;\r\n",["99","100"],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\services\\userService.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\Notifications\\Notifications.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\menuBar\\MenuBarNew.jsx",["101","102","103","104","105"],"import React, {useEffect, useState, useContext} from 'react';\r\nimport miniLogo from '../../assets/images/r.png'\r\nimport './MenuBarNew.scss'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from '../../store/Store';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {getUser} from '../../services/userService';\r\nimport {serviceURL} from '../../constants/serviceURLS';\r\n\r\n\r\nfunction MenubarNew() {\r\n\r\n    const [userProfile, setUserProfile] = useContext(UserContext);\r\n    const [pageLoad] = useState(true)\r\n    let navbar;\r\n    let navbarToggle;\r\n    let navbarMenu;\r\n    let navbarLinksContainer;\r\n\r\n    useEffect( () => {\r\n        if (!userProfile){\r\n            getUser().then( ({ data }) => {\r\n                setUserProfile(data);\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n        }\r\n    }, [pageLoad])\r\n\r\n    useEffect(() => {\r\n        navbar = document.getElementById(\"navbar\");\r\n        navbarToggle = navbar.querySelector(\".navbar-toggle\");\r\n        navbarMenu = navbar.querySelector(\".navbar-menu\");\r\n        navbarLinksContainer = navbar.querySelector(\".navbar-links\");\r\n\r\n        navbarToggle.addEventListener(\"click\", () => {\r\n            if (navbar.classList.contains(\"opened\")) {\r\n                closeMobileNavbar();\r\n            } else {\r\n                openMobileNavbar();\r\n            }\r\n        });\r\n\r\n        navbarLinksContainer.addEventListener(\"click\", (clickEvent) => {\r\n            clickEvent.stopPropagation();\r\n        });\r\n\r\n        navbarMenu.addEventListener(\"click\", closeMobileNavbar);\r\n    }, [pageLoad])\r\n\r\n    const openMobileNavbar = () => {\r\n        navbar.classList.add(\"opened\");\r\n        navbarToggle.setAttribute(\"aria-label\", \"Close navigation menu.\");\r\n    }\r\n\r\n    const closeMobileNavbar = () => {\r\n        navbar.classList.remove(\"opened\");\r\n        navbarToggle.setAttribute(\"aria-label\", \"Open navigation menu.\");\r\n    }\r\n\r\n    return(\r\n        <div className=\"MenuBar\">\r\n            <header id=\"navbar\">\r\n                <nav className=\"navbar-container container\">\r\n                    <a href=\"/\" className=\"home-link\">\r\n                        <img src={miniLogo} id=\"logo\" alt=\"logo\"/>\r\n                    </a>\r\n                    <button type=\"button\" className=\"navbar-toggle\" aria-label=\"Open navigation menu\">\r\n                        <span className=\"icon-bar\"></span>\r\n                        <span className=\"icon-bar\"></span>\r\n                        <span className=\"icon-bar\"></span>\r\n                    </button>\r\n                    <div className=\"navbar-menu\">\r\n                        <ul className=\"navbar-links\">\r\n                            <li className=\"navbar-item\"><Link className=\"navbar-link\" to=\"/\">Home</Link></li>\r\n                            <li className=\"navbar-item\"><Link className=\"navbar-link\" to=\"/events\">Events</Link></li>\r\n                            <li className=\"navbar-item\"><Link className=\"navbar-link\" to=\"/members\">Members</Link></li>\r\n                            {\r\n                                !userProfile ?\r\n                                    <li className=\"navbar-item\"><a className=\"navbar-link\" href={`${serviceURL}/api/auth/discord`} >Login<AccountCircle id=\"defaultAccountCircle\" fontSize=\"default\"/></a></li>\r\n                                    :\r\n                                    <li className=\"navbar-item\"><Link className=\"navbar-link\" to={`/profile/${userProfile._id}`}>{userProfile.userName}<Avatar id=\"accountCircle\" alt={userProfile.userName} src={`https://cdn.discordapp.com/avatars/${userProfile._id}/${userProfile.avatar}`}/></Link></li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenubarNew","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\notAuthorised\\NotAuthorised.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\notFound\\NotFound.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\constants\\serviceURLS.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\services\\eventsService.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\events\\NewEvent.jsx",["106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"import React, {useContext, useState} from 'react';\r\nimport {UserContext} from \"../../store/Store\";\r\nimport './newevents.scss'\r\nimport {Paper} from \"@material-ui/core\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {KeyboardDateTimePicker} from \"@material-ui/pickers\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport NotAuthorised from \"../notAuthorised/NotAuthorised\";\r\nimport {publishEvent} from \"../../services/eventsService\";\r\nimport Notifications from \"../../components/Notifications/Notifications\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\n\r\n\r\nfunction NewEvent(props) {\r\n    const [userProfile] = useContext(UserContext);\r\n    const [title, setTitle] = useState('');\r\n    const [titleError, setTitleError] = useState(false);\r\n    const [event, setEvent] = useState('');\r\n    const [eventError, setEventError] = useState(false);\r\n    const [game, setGame] = useState('');\r\n    const [gameError, setGameError] = useState(false);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [dateError, setDateError] = useState(false);\r\n    const [description, setDescription] = useState('');\r\n    const [thumbnailType, setThumbnailType] = useState('');\r\n    const [thumbnailTypeError, setThumbnailTypeError] = useState(false);\r\n    const [thumbnailUrl, setThumbnailTUrl] = useState('');\r\n    const [thumbnailUrlError, setThumbnailTUrlError] = useState(false);\r\n    const [thumbnailUrlErrorMsg, setThumbnailTUrlErrorMsg] = useState('');\r\n    const [descriptionError, setDescriptionError] = useState(false);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const notifications = new Notifications();\r\n    const history= useHistory();\r\n    const URLREGEX = new RegExp(/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-_]*)?\\??(?:[\\-\\+=&;%@\\.\\w_]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)/);\r\n\r\n    const toggleModal = () => {\r\n        if (openModal) {\r\n            setOpenModal(false);\r\n        } else {\r\n            setOpenModal(true);\r\n        }\r\n    }\r\n\r\n    const checkForm = () => {\r\n        let foundError = false\r\n        const dateNow = new Date();\r\n        const diff = (startDate - dateNow);\r\n        const hoursDiff = Math.floor((diff % 86400000) / 3600000);\r\n        if (title === '') {\r\n            setTitleError(true)\r\n            foundError = true\r\n        }\r\n\r\n        if (event === '') {\r\n            setEventError(true)\r\n            foundError = true\r\n        }\r\n\r\n        if (event === 'GAME' && game === '') {\r\n            setGameError(true)\r\n            foundError = true\r\n        }\r\n\r\n        if (event === 'GAME' && thumbnailType === '') {\r\n            setThumbnailTypeError(true);\r\n        }\r\n\r\n        if (description === '') {\r\n            setDescriptionError(true)\r\n            foundError = true;\r\n        }\r\n\r\n        if (startDate < dateNow) {\r\n            setDateError(true)\r\n            foundError = true\r\n        }\r\n\r\n        if (endDate < dateNow) {\r\n            setDateError(true)\r\n            foundError = true\r\n        }\r\n\r\n        if(thumbnailType === 'CUSTOM' && !checkURL(thumbnailUrl)){\r\n            setThumbnailTUrlError(true);\r\n            setThumbnailTUrlErrorMsg('Not A Valid URL')\r\n            return;\r\n        }\r\n\r\n        if(thumbnailUrl !== '' && thumbnailUrl.slice(0,4) !== 'http'){\r\n            setThumbnailTUrlError(true);\r\n            setThumbnailTUrlErrorMsg('URL must start with \\'http\\' / \\'https\\' ')\r\n            return;\r\n        }\r\n\r\n        if(thumbnailUrl.length > 2048) {\r\n            setThumbnailTUrlError(true);\r\n            setThumbnailTUrlErrorMsg('Thumbnail URL too long, Max 2048 characters')\r\n            return;\r\n        }\r\n\r\n        if (foundError) {\r\n            return;\r\n        }\r\n\r\n        submitEvent()\r\n    }\r\n\r\n    const checkURL = (url) => {\r\n        return URLREGEX.test(url);\r\n    }\r\n\r\n    const checkThumbnail = () => {\r\n\r\n        if(checkURL(thumbnailUrl)){\r\n            console.log(thumbnailUrl.length)\r\n            toggleModal()\r\n            setThumbnailTUrlErrorMsg('');\r\n            setThumbnailTUrlError(false);\r\n        } else {\r\n            setThumbnailTUrlError(true);\r\n            setThumbnailTUrlErrorMsg('Not A Valid URL');\r\n        }\r\n    }\r\n\r\n    const submitEvent = () => {\r\n        const data = {\r\n            title,\r\n            event,\r\n            game,\r\n            thumbnailType,\r\n            thumbnailUrl,\r\n            startDate,\r\n            endDate,\r\n            description\r\n        }\r\n        publishEvent(data, userProfile).then((result) => {\r\n            notifications.sendToast('success',5000, 'Success', `Event ${title} has been successfully posted`)\r\n            resetForm()\r\n            history.push('/events')\r\n        }).catch((err) => {\r\n            notifications.sendToast('error', 5000, 'Error', 'Yikes... There was an Error please try again')\r\n        })\r\n\r\n    }\r\n    const resetForm = () => {\r\n        setTitleError(false)\r\n        setTitle('')\r\n        setEventError(false)\r\n        setEvent('')\r\n        setGameError(false)\r\n        setGame('')\r\n        setDescriptionError(false)\r\n        setDescription('')\r\n        setDateError(false)\r\n        setStartDate(new Date())\r\n        setEndDate(new Date())\r\n        setThumbnailTUrlError(false)\r\n        setThumbnailTUrlErrorMsg('')\r\n        setThumbnailTUrl('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"NewEvents\">\r\n\r\n            {\r\n                userProfile && userProfile.staff ?\r\n                    <Paper className=\"Paper\">\r\n                        <div className=\"HeadingBg\"/>\r\n                        <h1 id=\"TitleText\">Create New Event</h1>\r\n                        <div id=\"logoContainer\">\r\n                            <img src={logo} alt=\"Red Wine Gaming\" id=\"logo\"/>\r\n                        </div>\r\n                        <div>\r\n                            <TextField className=\"Input Text\"\r\n                                       variant=\"filled\"\r\n                                       label=\"Event Title\"\r\n                                       error={titleError}\r\n                                       value={title}\r\n                                       onChange={(event) => {\r\n                                           setTitle(event.target.value)\r\n                                       }}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <FormControl className=\"Input Text\" variant=\"filled\">\r\n                                <InputLabel>Event Type</InputLabel>\r\n                                <Select\r\n                                    label=\"Event Type\"\r\n                                    value={event}\r\n                                    error={eventError}\r\n                                    onChange={(event) => {\r\n                                        setEvent(event.target.value)\r\n                                    }}\r\n                                >\r\n                                    <MenuItem value={'GENERAL'}>General Event</MenuItem>\r\n                                    <MenuItem value={'GAME'}>Game</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        {event === 'GAME' ?\r\n                            <div>\r\n                                <TextField className=\"Input Text\"\r\n                                           variant=\"filled\"\r\n                                           label=\"Game Title\"\r\n                                           error={gameError}\r\n                                           value={game}\r\n                                           onChange={(event) => {\r\n                                               setGame(event.target.value)\r\n                                           }}\r\n                                />\r\n                                <FormControl className=\"Input Text\" variant=\"filled\">\r\n                                    <InputLabel>Event Thumbnail</InputLabel>\r\n                                    <Select\r\n                                        label=\"Event Type\"\r\n                                        value={thumbnailType}\r\n                                        error={thumbnailTypeError}\r\n                                        onChange={(event) => {\r\n                                            setThumbnailType(event.target.value)\r\n                                        }}\r\n                                    >\r\n                                        <MenuItem value={'DEFAULT'}>Default</MenuItem>\r\n                                        <MenuItem value={'CUSTOM'}>Custom</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                {thumbnailType === 'CUSTOM' ?\r\n                                    <div>\r\n                                    <TextField className=\"Input Text\"\r\n                                               variant=\"filled\"\r\n                                               label=\"Custom Thumbnail URL\"\r\n                                               error={thumbnailUrlError}\r\n                                               helperText={thumbnailUrlErrorMsg}\r\n                                               value={thumbnailUrl}\r\n                                               onChange={(event) => {\r\n                                                   setThumbnailTUrl(event.target.value)\r\n                                               }}\r\n                                    />\r\n                                        <div id=\"buttonContainer\">\r\n                                            <Button variant=\"contained\" onClick={checkThumbnail} color=\"secondary\" startIcon={<VisibilityIcon/>}>\r\n                                                Preview Thumbnail\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                            : null\r\n                        }\r\n                        <div>\r\n                            <TextField\r\n                                className=\"Input Text\"\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Event Description\"\r\n                                multiline\r\n                                rows={10}\r\n                                error={descriptionError}\r\n                                value={description}\r\n                                onChange={(event) => {\r\n                                    setDescription(event.target.value)\r\n                                }}\r\n                                variant=\"filled\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <KeyboardDateTimePicker\r\n                                variant=\"filled\"\r\n                                className=\"Input\"\r\n                                margin=\"normal\"\r\n                                error={dateError}\r\n                                helperText={'Must be at least 3 hours in the future'}\r\n                                id=\"date-picker-dialog\"\r\n                                format=\"dd/MM/yyyy HH:mm\"\r\n                                value={startDate}\r\n                                ampm={false}\r\n                                label=\"Event Start Date\"\r\n                                disablePast\r\n                                onChange={(date) => {\r\n                                    setStartDate(date)\r\n                                }}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <KeyboardDateTimePicker\r\n                                variant=\"filled\"\r\n                                className=\"Input\"\r\n                                margin=\"normal\"\r\n                                error={dateError}\r\n                                helperText={'Must be at least 4 hours in the future'}\r\n                                id=\"date-picker-dialog\"\r\n                                format=\"dd/MM/yyyy HH:mm\"\r\n                                value={endDate}\r\n                                ampm={false}\r\n                                label=\"Event End Date\"\r\n                                disablePast\r\n                                onChange={(date) => {\r\n                                    setEndDate(date)\r\n                                }}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div id=\"buttonContainer\">\r\n                            <Button variant=\"contained\" onClick={checkForm} color=\"secondary\" startIcon={<SaveIcon/>}>\r\n                                Save Event\r\n                            </Button>\r\n                        </div>\r\n                    </Paper>\r\n                    : <NotAuthorised/>\r\n            }\r\n            <Dialog\r\n                open={openModal}\r\n                onClose={() => {\r\n                }}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogContent>\r\n                    <Avatar className=\"ThumbnailImage\" alt={''}\r\n                            src={thumbnailUrl}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={toggleModal} color=\"secondary\" autoFocus>\r\n                        CLOSE\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewEvent;","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\events\\Events.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\events\\EventDetails.jsx",["128","129"],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\profile\\Profile.jsx",["130"],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\profile\\timeTransformer.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\members\\Members.jsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":26,"column":8,"nodeType":"137","endLine":26,"endColumn":18,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":55,"column":29,"nodeType":"141","endLine":55,"endColumn":79},{"ruleId":"131","replacedBy":"142"},{"ruleId":"133","replacedBy":"143"},{"ruleId":"135","severity":1,"message":"144","line":29,"column":8,"nodeType":"137","endLine":29,"endColumn":18,"suggestions":"145"},{"ruleId":"135","severity":1,"message":"146","line":32,"column":18,"nodeType":"147","endLine":32,"endColumn":51},{"ruleId":"135","severity":1,"message":"148","line":33,"column":24,"nodeType":"147","endLine":33,"endColumn":62},{"ruleId":"135","severity":1,"message":"149","line":34,"column":22,"nodeType":"147","endLine":34,"endColumn":58},{"ruleId":"135","severity":1,"message":"150","line":35,"column":32,"nodeType":"147","endLine":35,"endColumn":69},{"ruleId":"151","severity":1,"message":"152","line":18,"column":8,"nodeType":"153","messageId":"154","endLine":18,"endColumn":19},{"ruleId":"151","severity":1,"message":"155","line":20,"column":8,"nodeType":"153","messageId":"154","endLine":20,"endColumn":25},{"ruleId":"156","severity":1,"message":"157","line":48,"column":65,"nodeType":"158","messageId":"159","endLine":48,"endColumn":66,"suggestions":"160"},{"ruleId":"156","severity":1,"message":"161","line":48,"column":71,"nodeType":"158","messageId":"159","endLine":48,"endColumn":72,"suggestions":"162"},{"ruleId":"156","severity":1,"message":"163","line":48,"column":73,"nodeType":"158","messageId":"159","endLine":48,"endColumn":74,"suggestions":"164"},{"ruleId":"156","severity":1,"message":"165","line":48,"column":93,"nodeType":"158","messageId":"159","endLine":48,"endColumn":94,"suggestions":"166"},{"ruleId":"156","severity":1,"message":"157","line":48,"column":95,"nodeType":"158","messageId":"159","endLine":48,"endColumn":96,"suggestions":"167"},{"ruleId":"156","severity":1,"message":"157","line":48,"column":110,"nodeType":"158","messageId":"159","endLine":48,"endColumn":111,"suggestions":"168"},{"ruleId":"156","severity":1,"message":"161","line":48,"column":116,"nodeType":"158","messageId":"159","endLine":48,"endColumn":117,"suggestions":"169"},{"ruleId":"156","severity":1,"message":"163","line":48,"column":118,"nodeType":"158","messageId":"159","endLine":48,"endColumn":119,"suggestions":"170"},{"ruleId":"156","severity":1,"message":"165","line":48,"column":137,"nodeType":"158","messageId":"159","endLine":48,"endColumn":138,"suggestions":"171"},{"ruleId":"156","severity":1,"message":"157","line":48,"column":139,"nodeType":"158","messageId":"159","endLine":48,"endColumn":140,"suggestions":"172"},{"ruleId":"156","severity":1,"message":"161","line":48,"column":151,"nodeType":"158","messageId":"159","endLine":48,"endColumn":152,"suggestions":"173"},{"ruleId":"156","severity":1,"message":"174","line":48,"column":155,"nodeType":"158","messageId":"159","endLine":48,"endColumn":156,"suggestions":"175"},{"ruleId":"156","severity":1,"message":"165","line":48,"column":157,"nodeType":"158","messageId":"159","endLine":48,"endColumn":158,"suggestions":"176"},{"ruleId":"156","severity":1,"message":"157","line":48,"column":175,"nodeType":"158","messageId":"159","endLine":48,"endColumn":176,"suggestions":"177"},{"ruleId":"156","severity":1,"message":"161","line":48,"column":177,"nodeType":"158","messageId":"159","endLine":48,"endColumn":178,"suggestions":"178"},{"ruleId":"156","severity":1,"message":"165","line":48,"column":184,"nodeType":"158","messageId":"159","endLine":48,"endColumn":185,"suggestions":"179"},{"ruleId":"156","severity":1,"message":"165","line":48,"column":198,"nodeType":"158","messageId":"159","endLine":48,"endColumn":199,"suggestions":"180"},{"ruleId":"156","severity":1,"message":"181","line":48,"column":200,"nodeType":"158","messageId":"159","endLine":48,"endColumn":201,"suggestions":"182"},{"ruleId":"156","severity":1,"message":"174","line":48,"column":202,"nodeType":"158","messageId":"159","endLine":48,"endColumn":203,"suggestions":"183"},{"ruleId":"151","severity":1,"message":"184","line":62,"column":15,"nodeType":"153","messageId":"154","endLine":62,"endColumn":24},{"ruleId":"135","severity":1,"message":"185","line":26,"column":8,"nodeType":"137","endLine":26,"endColumn":18,"suggestions":"186"},{"ruleId":"151","severity":1,"message":"187","line":45,"column":11,"nodeType":"153","messageId":"154","endLine":45,"endColumn":19},{"ruleId":"135","severity":1,"message":"188","line":39,"column":8,"nodeType":"137","endLine":39,"endColumn":10,"suggestions":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'notifications', 'setUserProfile', and 'userProfile'. Either include them or remove the dependency array.","ArrayExpression",["192"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["190"],["191"],"React Hook useEffect has missing dependencies: 'setUserProfile' and 'userProfile'. Either include them or remove the dependency array.",["193"],"Assignments to the 'navbar' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'navbarToggle' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'navbarMenu' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'navbarLinksContainer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-unused-vars","'DialogTitle' is defined but never used.","Identifier","unusedVar","'DialogContentText' is defined but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["194","195"],"Unnecessary escape character: \\+.",["196","197"],"Unnecessary escape character: \\$.",["198","199"],"Unnecessary escape character: \\..",["200","201"],["202","203"],["204","205"],["206","207"],["208","209"],["210","211"],["212","213"],["214","215"],"Unnecessary escape character: \\/.",["216","217"],["218","219"],["220","221"],["222","223"],["224","225"],["226","227"],"Unnecessary escape character: \\!.",["228","229"],["230","231"],"'hoursDiff' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.eventId'. Either include it or remove the dependency array.",["232"],"'getImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.userId'. Either include it or remove the dependency array.",["233"],"no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"messageId":"238","fix":"239","desc":"240"},{"messageId":"241","fix":"242","desc":"243"},{"messageId":"238","fix":"244","desc":"240"},{"messageId":"241","fix":"245","desc":"243"},{"messageId":"238","fix":"246","desc":"240"},{"messageId":"241","fix":"247","desc":"243"},{"messageId":"238","fix":"248","desc":"240"},{"messageId":"241","fix":"249","desc":"243"},{"messageId":"238","fix":"250","desc":"240"},{"messageId":"241","fix":"251","desc":"243"},{"messageId":"238","fix":"252","desc":"240"},{"messageId":"241","fix":"253","desc":"243"},{"messageId":"238","fix":"254","desc":"240"},{"messageId":"241","fix":"255","desc":"243"},{"messageId":"238","fix":"256","desc":"240"},{"messageId":"241","fix":"257","desc":"243"},{"messageId":"238","fix":"258","desc":"240"},{"messageId":"241","fix":"259","desc":"243"},{"messageId":"238","fix":"260","desc":"240"},{"messageId":"241","fix":"261","desc":"243"},{"messageId":"238","fix":"262","desc":"240"},{"messageId":"241","fix":"263","desc":"243"},{"messageId":"238","fix":"264","desc":"240"},{"messageId":"241","fix":"265","desc":"243"},{"messageId":"238","fix":"266","desc":"240"},{"messageId":"241","fix":"267","desc":"243"},{"messageId":"238","fix":"268","desc":"240"},{"messageId":"241","fix":"269","desc":"243"},{"messageId":"238","fix":"270","desc":"240"},{"messageId":"241","fix":"271","desc":"243"},{"messageId":"238","fix":"272","desc":"240"},{"messageId":"241","fix":"273","desc":"243"},{"messageId":"238","fix":"274","desc":"240"},{"messageId":"241","fix":"275","desc":"243"},{"messageId":"238","fix":"276","desc":"240"},{"messageId":"241","fix":"277","desc":"243"},{"messageId":"238","fix":"278","desc":"240"},{"messageId":"241","fix":"279","desc":"243"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [notifications, pageLoad, setUserProfile, userProfile]",{"range":"284","text":"285"},"Update the dependencies array to be: [pageLoad, setUserProfile, userProfile]",{"range":"286","text":"287"},"removeEscape",{"range":"288","text":"289"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"290","text":"291"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"292","text":"289"},{"range":"293","text":"291"},{"range":"294","text":"289"},{"range":"295","text":"291"},{"range":"296","text":"289"},{"range":"297","text":"291"},{"range":"298","text":"289"},{"range":"299","text":"291"},{"range":"300","text":"289"},{"range":"301","text":"291"},{"range":"302","text":"289"},{"range":"303","text":"291"},{"range":"304","text":"289"},{"range":"305","text":"291"},{"range":"306","text":"289"},{"range":"307","text":"291"},{"range":"308","text":"289"},{"range":"309","text":"291"},{"range":"310","text":"289"},{"range":"311","text":"291"},{"range":"312","text":"289"},{"range":"313","text":"291"},{"range":"314","text":"289"},{"range":"315","text":"291"},{"range":"316","text":"289"},{"range":"317","text":"291"},{"range":"318","text":"289"},{"range":"319","text":"291"},{"range":"320","text":"289"},{"range":"321","text":"291"},{"range":"322","text":"289"},{"range":"323","text":"291"},{"range":"324","text":"289"},{"range":"325","text":"291"},{"range":"326","text":"289"},{"range":"327","text":"291"},"Update the dependencies array to be: [props.match.params.eventId, signedUp]",{"range":"328","text":"329"},"Update the dependencies array to be: [props.match.params.userId]",{"range":"330","text":"331"},[988,998],"[notifications, pageLoad, setUserProfile, userProfile]",[926,936],"[pageLoad, setUserProfile, userProfile]",[2533,2534],"",[2533,2533],"\\",[2539,2540],[2539,2539],[2541,2542],[2541,2541],[2561,2562],[2561,2561],[2563,2564],[2563,2563],[2578,2579],[2578,2578],[2584,2585],[2584,2584],[2586,2587],[2586,2586],[2605,2606],[2605,2605],[2607,2608],[2607,2607],[2619,2620],[2619,2619],[2623,2624],[2623,2623],[2625,2626],[2625,2625],[2643,2644],[2643,2643],[2645,2646],[2645,2645],[2652,2653],[2652,2652],[2666,2667],[2666,2666],[2668,2669],[2668,2668],[2670,2671],[2670,2670],[1171,1181],"[props.match.params.eventId, signedUp]",[1837,1839],"[props.match.params.userId]"]