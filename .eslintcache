[{"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\index.js":"1","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\App.js":"2","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\serviceWorker.js":"3","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\theme\\theme.js":"4","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\theme\\colours.js":"5","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\store\\Store.jsx":"6","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\home\\Home.jsx":"7","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\menuBar\\MenuBar.jsx":"8","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\Footer\\Footer.jsx":"9","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\services\\userService.js":"10","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\Notifications\\Notifications.js":"11","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\menuBar\\MenuBarNew.jsx":"12","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\notAuthorised\\NotAuthorised.jsx":"13","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\notFound\\NotFound.jsx":"14","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\constants\\serviceURLS.js":"15","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\services\\eventsService.js":"16","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\events\\NewEvent.jsx":"17","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\events\\Events.jsx":"18","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\events\\EventDetails.jsx":"19","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\profile\\Profile.jsx":"20","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\profile\\timeTransformer.js":"21","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\members\\Members.jsx":"22","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\quiz\\Quiz.jsx":"23","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\Chat\\Chat.jsx":"24"},{"size":874,"mtime":1609605540197,"results":"25","hashOfConfig":"26"},{"size":2321,"mtime":1622389943132,"results":"27","hashOfConfig":"26"},{"size":5227,"mtime":1609514592941,"results":"28","hashOfConfig":"26"},{"size":497,"mtime":1609611263757,"results":"29","hashOfConfig":"26"},{"size":297,"mtime":1610733785526,"results":"30","hashOfConfig":"26"},{"size":385,"mtime":1609600614139,"results":"31","hashOfConfig":"26"},{"size":2223,"mtime":1619312717657,"results":"32","hashOfConfig":"26"},{"size":3222,"mtime":1609801303807,"results":"33","hashOfConfig":"26"},{"size":871,"mtime":1619298171188,"results":"34","hashOfConfig":"26"},{"size":782,"mtime":1617211114685,"results":"35","hashOfConfig":"26"},{"size":1056,"mtime":1610037612829,"results":"36","hashOfConfig":"26"},{"size":4006,"mtime":1622394593307,"results":"37","hashOfConfig":"26"},{"size":870,"mtime":1609982988250,"results":"38","hashOfConfig":"26"},{"size":872,"mtime":1610013445223,"results":"39","hashOfConfig":"26"},{"size":279,"mtime":1616615371183,"results":"40","hashOfConfig":"26"},{"size":650,"mtime":1611874391492,"results":"41","hashOfConfig":"26"},{"size":14848,"mtime":1620141708276,"results":"42","hashOfConfig":"26"},{"size":2453,"mtime":1619386359273,"results":"43","hashOfConfig":"26"},{"size":9015,"mtime":1620169580021,"results":"44","hashOfConfig":"26"},{"size":14686,"mtime":1619811645860,"results":"45","hashOfConfig":"26"},{"size":1492,"mtime":1620140884679,"results":"46","hashOfConfig":"26"},{"size":7879,"mtime":1619813315903,"results":"47","hashOfConfig":"26"},{"size":3012,"mtime":1623790186902,"results":"48","hashOfConfig":"26"},{"size":3673,"mtime":1623792450024,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1yy4u3x",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\index.js",[],["102","103"],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\App.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\serviceWorker.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\theme\\theme.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\theme\\colours.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\store\\Store.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\home\\Home.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\menuBar\\MenuBar.jsx",["104","105"],"import React, {useContext, useState, useEffect} from \"react\";\r\nimport './menubar.scss';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport { UserContext } from \"../../store/Store\";\r\nimport { Link } from 'react-router-dom'\r\nimport { getUser } from \"../../services/userService\";\r\nimport Notifications from \"../Notifications/Notifications\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nfunction MenuBar() {\r\n    const notifications = new Notifications();\r\n    const [userProfile, setUserProfile] = useContext(UserContext);\r\n    const [pageLoad] = useState(true)\r\n\r\n    useEffect( () => {\r\n        if (!userProfile){\r\n            console.log(userProfile)\r\n            getUser().then( ({ data }) => {\r\n                setUserProfile(data);\r\n                console.log(data);\r\n                notifications.sendToast('success', 5000, 'Success', 'Logged In...');\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n        }\r\n    }, [pageLoad])\r\n\r\n\r\n    const login = () => window.location.href = 'http://service.redwinegaming.com/api/auth/discord';\r\n\r\n    return (\r\n        <div id=\"menuBar\">\r\n            <header id=\"nav-wrapper\">\r\n                <nav id=\"nav\">\r\n                    <div className=\"nav left\">\r\n                            <span className=\"gradient skew\"><h1 className=\"logo un-skew\"><Link\r\n                                to=\"/\">[RWG]</Link></h1></span>\r\n                        <button id=\"menu\" className=\"btn-nav\"><span\r\n                            className=\"fas fa-bars\"></span></button>\r\n                    </div>\r\n                    { userProfile ?\r\n                        <div className=\"nav right\">\r\n                            <Link to=\"/\" className=\"nav-link active\"><span\r\n                                className=\"nav-link-span\"><span className=\"u-nav\">Home</span></span></Link>\r\n                            <Link to='/events' className=\"nav-link\"><span\r\n                                className=\"nav-link-span\"><span\r\n                                className=\"u-nav\">Events</span></span></Link>\r\n                            <Link to=\"/\" className=\"nav-link\"><span\r\n                                className=\"nav-link-span\"><span className=\"u-nav\">Members</span></span></Link>\r\n                            <Link to=\"/\" className=\"nav-link profile\"><span className=\"nav-link-span\"><span\r\n                                className=\"u-nav\">{userProfile.userName} <Avatar id=\"accountCircle\" alt={userProfile.userName} src={`https://cdn.discordapp.com/avatars/${userProfile._id}/${userProfile.avatar}`}/> </span></span></Link>\r\n                        </div>\r\n                        :\r\n                        <div className=\"nav right\">\r\n                            <a href=\"#\"  onClick={login} className=\"nav-link\"><span className=\"nav-link-span\"><span\r\n                                className=\"u-nav\">Login  </span><AccountCircle id=\"defaultAccountCircle\"\r\n                                                                               fontSize=\"default\"/></span></a>\r\n                        </div>\r\n                    }\r\n\r\n                </nav>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuBar;\r\n",["106","107"],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\services\\userService.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\Notifications\\Notifications.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\menuBar\\MenuBarNew.jsx",["108","109","110","111","112"],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\notAuthorised\\NotAuthorised.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\notFound\\NotFound.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\constants\\serviceURLS.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\services\\eventsService.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\events\\NewEvent.jsx",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\events\\Events.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\events\\EventDetails.jsx",["133"],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\profile\\Profile.jsx",["134"],"import React, {useContext, useEffect, useState} from 'react'\r\nimport {Paper, Typography} from '@material-ui/core';\r\nimport './profile.scss'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {getUserData, changeCasinoStatus} from '../../services/userService';\r\nimport {lastSeen, formatVoiceTime, getKD} from './timeTransformer';\r\nimport {UserContext} from '../../store/Store';\r\nimport Notifications from '../../components/Notifications/Notifications';\r\nimport defaultImage from '../../assets/images/defaultUser.jpg'\r\n\r\nconst notifications = new Notifications();\r\n\r\n\r\nfunction Profile(props) {\r\n    const [casinoChecked, setCasinoChecked] = useState(false);\r\n    const [casinoLabel, setCasinoLabel] = useState('Opted Out');\r\n    const [casinoDialog, setCasinoDialog] = useState(false);\r\n    const [profileData, setProfileData] = useState(false)\r\n    const [userProfile] = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        getUserData([props.match.params.userId]).then((result) => {\r\n            setProfileData(result.data[0]);\r\n            setCasinoChecked(result.data[0].casinoOptIn);\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (casinoChecked) {\r\n            setCasinoLabel('Opted In')\r\n        } else {\r\n            setCasinoLabel('Opted Out')\r\n        }\r\n    }, [casinoChecked]);\r\n\r\n    const toggleModal = () => {\r\n        if (casinoDialog) {\r\n            setCasinoDialog(false);\r\n        } else {\r\n            setCasinoDialog(true);\r\n        }\r\n    }\r\n\r\n    const onCardDelete = () => {\r\n        notifications.sendToast('info', 6000, 'Info', `Feature Coming Soon!, Contact an Admin to update your roles.`)\r\n    }\r\n\r\n    const getRoles = () => {\r\n        if (profileData?.roles) {\r\n            return (\r\n                profileData.roles.map((role) => {\r\n                    return (\r\n                        <Chip\r\n                            className=\"Chip\"\r\n                            label={role}\r\n                            clickable\r\n                            color=\"secondary\"\r\n                            onDelete={onCardDelete}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    )\r\n                })\r\n            )\r\n        } else {\r\n            return 'No Roles'\r\n        }\r\n    }\r\n\r\n    const getNotifications = () => {\r\n        if (profileData?.notifications) {\r\n            return (\r\n                profileData.notifications.map((notification) => {\r\n                    return (\r\n                        <Chip\r\n                            className=\"Chip\"\r\n                            label={notification}\r\n                            clickable\r\n                            onDelete={onCardDelete}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    )\r\n                })\r\n            )\r\n        } else {\r\n            return 'No Notifications'\r\n        }\r\n    }\r\n\r\n    const updateCasinoStatus = (status) => {\r\n        if (userProfile._id === profileData._id) {\r\n            changeCasinoStatus(profileData._id, status).then(() => {\r\n                notifications.sendToast('success', 6000, 'Success', `Your Casino status has been updated.`)\r\n            }).catch(() => {\r\n                notifications.sendToast('error', 6000, 'Error', `Looks like we have hit a snag 😢. Contact an Admin for assistance.`)\r\n            });\r\n            setCasinoChecked(status)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Profile\">\r\n            <Paper className=\"Paper\">\r\n\r\n                {\r\n                    profileData ?\r\n                        <div>\r\n                            <div className=\"HeaderContainer\">\r\n                                <img className=\"ProfileImage\" alt={''}\r\n                                     src={profileData.avatar ? `https://cdn.discordapp.com/avatars/${profileData._id}/${profileData.avatar}` : defaultImage}/>\r\n                                <div className=\"ProfileMask\"/>\r\n                            </div>\r\n                            <div className=\"ProfileContainer\">\r\n                                <Avatar className=\"ProfileAvatar\" alt={''}\r\n                                        src={profileData.avatar ? `https://cdn.discordapp.com/avatars/${profileData._id}/${profileData.avatar}` : defaultImage}/>\r\n                            </div>\r\n                            <div className=\"TitleContainer\">\r\n                                <Typography variant=\"h4\">{profileData.userName}</Typography>\r\n                                <div className=\"SubTitleContainer\">\r\n                                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                                        Level: {profileData.level} XP: {profileData.xp}\r\n                                    </Typography>\r\n                                </div>\r\n                                <div className=\"SubTitleContainer\">\r\n                                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                                        Last Seen: {lastSeen(profileData.voiceStartTime, profileData.voiceEndTime)}\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"SubContainer\">\r\n                                <Typography variant=\"h5\">Casino Games</Typography>\r\n                            </div>\r\n                            <div className=\"CasinoContainer\">\r\n                                <FormControl component=\"fieldset\">\r\n                                    {\r\n                                        userProfile ?\r\n                                            <div>\r\n                                                {userProfile._id === profileData._id ?\r\n                                                    <div>\r\n                                                        <FormGroup>\r\n                                                            <FormControlLabel\r\n                                                                control={<Switch checked={casinoChecked}\r\n                                                                                 onChange={(event) => {\r\n                                                                                     updateCasinoStatus(event.target.checked)\r\n                                                                                 }}\r\n                                                                                 name=\"gilad\"/>}\r\n                                                                label={casinoLabel}\r\n                                                            />\r\n                                                        </FormGroup>\r\n                                                        <Link href=\"#\" className=\"Link\" onClick={toggleModal}>\r\n                                                            What's Casino Opt In?\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div>\r\n                                                        <FormGroup>\r\n                                                            <FormControlLabel\r\n                                                                control={<Switch checked={casinoChecked}\r\n                                                                                 name=\"gilad\"/>}\r\n                                                                label={casinoLabel}\r\n                                                                disabled\r\n                                                            />\r\n                                                        </FormGroup>\r\n                                                        <Link href=\"#\" className=\"Link\" onClick={toggleModal}>\r\n                                                            What's Casino Opt In?\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                            :\r\n                                            <div>\r\n                                                <FormGroup>\r\n                                                    <FormControlLabel\r\n                                                        control={<Switch checked={casinoChecked}\r\n                                                                         name=\"gilad\"/>}\r\n                                                        label={casinoLabel}\r\n                                                        disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <Link href=\"#\" className=\"Link\" onClick={toggleModal}>\r\n                                                    What's Casino Opt In?\r\n                                                </Link>\r\n                                            </div>\r\n                                    }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"SubContainer\">\r\n                                <Typography variant=\"h5\">Roles</Typography>\r\n                            </div>\r\n                            <div className=\"ChipContainer\">\r\n                                {getRoles()}\r\n                            </div>\r\n                            <div className=\"SubContainer\">\r\n                                <Typography variant=\"h5\">Notifications</Typography>\r\n                            </div>\r\n                            <div className=\"ChipContainer\">\r\n                                {getNotifications()}\r\n                            </div>\r\n                            <div className=\"SubContainer\">\r\n                                <Typography variant=\"h5\">Stats</Typography>\r\n                            </div>\r\n                            <div className=\"StatsContainer\">\r\n                                <TextField className=\"Input Text Small\"\r\n                                           variant=\"outlined\"\r\n                                           label=\"Wallet\"\r\n                                           value={`💎 ${profileData.gems.toLocaleString()}`}\r\n                                           disabled\r\n                                />\r\n                                <TextField className=\"Input Text Small\"\r\n                                           variant=\"outlined\"\r\n                                           label=\"Voice Chat Time\"\r\n                                           value={formatVoiceTime(profileData.voiceTime)}\r\n                                           disabled\r\n                                />\r\n                                <TextField className=\"Input Text Small\"\r\n                                           variant=\"outlined\"\r\n                                           label=\"Messages Sent\"\r\n                                           value={profileData.messages.toLocaleString()}\r\n                                           disabled\r\n                                />\r\n                                <TextField className=\"Input Text Small\"\r\n                                           variant=\"outlined\"\r\n                                           label=\"Duel K/D\"\r\n                                           value={getKD(profileData.duelWins, profileData.duelLosses)}\r\n                                           disabled\r\n                                />\r\n                                <TextField className=\"Input Text Small\"\r\n                                           variant=\"outlined\"\r\n                                           label=\"Successful Steals\"\r\n                                           value={profileData.steals.toLocaleString()}\r\n                                           disabled\r\n                                />\r\n                                <TextField className=\"Input Text Small\"\r\n                                           variant=\"outlined\"\r\n                                           label=\"Dog House Wins\"\r\n                                           value={profileData.doghouseWins.toLocaleString()}\r\n                                           disabled\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div>No Profile</div>\r\n                }\r\n\r\n\r\n            </Paper>\r\n            <Dialog\r\n                open={casinoDialog}\r\n                onClose={() => {\r\n                }}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Casino Opt In\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Opting in allows you to play games in the Casino Channel on the Discord. Being opted in\r\n                        opens your 💎's to being stolen by other members.\r\n                        You can change your Casino Discord Notification preferences by right clicking the channel name.\r\n                        Members not opted in can still earn gems from Events, Voice chat and Messages but will not be\r\n                        open to being stolen from or gambling.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={toggleModal} color=\"primary\" autoFocus>\r\n                        CLOSE\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile","C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\profile\\timeTransformer.js",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\members\\Members.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\pages\\quiz\\Quiz.jsx",[],"C:\\Users\\blue_\\Documents\\GitHub\\RWGApp\\src\\components\\Chat\\Chat.jsx",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":26,"column":8,"nodeType":"141","endLine":26,"endColumn":18,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":55,"column":29,"nodeType":"145","endLine":55,"endColumn":79},{"ruleId":"135","replacedBy":"146"},{"ruleId":"137","replacedBy":"147"},{"ruleId":"139","severity":1,"message":"148","line":29,"column":8,"nodeType":"141","endLine":29,"endColumn":18,"suggestions":"149"},{"ruleId":"139","severity":1,"message":"150","line":32,"column":18,"nodeType":"151","endLine":32,"endColumn":51},{"ruleId":"139","severity":1,"message":"152","line":33,"column":24,"nodeType":"151","endLine":33,"endColumn":62},{"ruleId":"139","severity":1,"message":"153","line":34,"column":22,"nodeType":"151","endLine":34,"endColumn":58},{"ruleId":"139","severity":1,"message":"154","line":35,"column":32,"nodeType":"151","endLine":35,"endColumn":69},{"ruleId":"155","severity":1,"message":"156","line":46,"column":65,"nodeType":"157","messageId":"158","endLine":46,"endColumn":66,"suggestions":"159"},{"ruleId":"155","severity":1,"message":"160","line":46,"column":71,"nodeType":"157","messageId":"158","endLine":46,"endColumn":72,"suggestions":"161"},{"ruleId":"155","severity":1,"message":"162","line":46,"column":73,"nodeType":"157","messageId":"158","endLine":46,"endColumn":74,"suggestions":"163"},{"ruleId":"155","severity":1,"message":"164","line":46,"column":93,"nodeType":"157","messageId":"158","endLine":46,"endColumn":94,"suggestions":"165"},{"ruleId":"155","severity":1,"message":"156","line":46,"column":95,"nodeType":"157","messageId":"158","endLine":46,"endColumn":96,"suggestions":"166"},{"ruleId":"155","severity":1,"message":"156","line":46,"column":110,"nodeType":"157","messageId":"158","endLine":46,"endColumn":111,"suggestions":"167"},{"ruleId":"155","severity":1,"message":"160","line":46,"column":116,"nodeType":"157","messageId":"158","endLine":46,"endColumn":117,"suggestions":"168"},{"ruleId":"155","severity":1,"message":"162","line":46,"column":118,"nodeType":"157","messageId":"158","endLine":46,"endColumn":119,"suggestions":"169"},{"ruleId":"155","severity":1,"message":"164","line":46,"column":137,"nodeType":"157","messageId":"158","endLine":46,"endColumn":138,"suggestions":"170"},{"ruleId":"155","severity":1,"message":"156","line":46,"column":139,"nodeType":"157","messageId":"158","endLine":46,"endColumn":140,"suggestions":"171"},{"ruleId":"155","severity":1,"message":"160","line":46,"column":151,"nodeType":"157","messageId":"158","endLine":46,"endColumn":152,"suggestions":"172"},{"ruleId":"155","severity":1,"message":"173","line":46,"column":155,"nodeType":"157","messageId":"158","endLine":46,"endColumn":156,"suggestions":"174"},{"ruleId":"155","severity":1,"message":"164","line":46,"column":157,"nodeType":"157","messageId":"158","endLine":46,"endColumn":158,"suggestions":"175"},{"ruleId":"155","severity":1,"message":"156","line":46,"column":175,"nodeType":"157","messageId":"158","endLine":46,"endColumn":176,"suggestions":"176"},{"ruleId":"155","severity":1,"message":"160","line":46,"column":177,"nodeType":"157","messageId":"158","endLine":46,"endColumn":178,"suggestions":"177"},{"ruleId":"155","severity":1,"message":"164","line":46,"column":184,"nodeType":"157","messageId":"158","endLine":46,"endColumn":185,"suggestions":"178"},{"ruleId":"155","severity":1,"message":"164","line":46,"column":198,"nodeType":"157","messageId":"158","endLine":46,"endColumn":199,"suggestions":"179"},{"ruleId":"155","severity":1,"message":"180","line":46,"column":200,"nodeType":"157","messageId":"158","endLine":46,"endColumn":201,"suggestions":"181"},{"ruleId":"155","severity":1,"message":"173","line":46,"column":202,"nodeType":"157","messageId":"158","endLine":46,"endColumn":203,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":60,"column":15,"nodeType":"185","messageId":"186","endLine":60,"endColumn":24},{"ruleId":"139","severity":1,"message":"187","line":27,"column":8,"nodeType":"141","endLine":27,"endColumn":18,"suggestions":"188"},{"ruleId":"139","severity":1,"message":"189","line":39,"column":8,"nodeType":"141","endLine":39,"endColumn":10,"suggestions":"190"},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'notifications', 'setUserProfile', and 'userProfile'. Either include them or remove the dependency array.","ArrayExpression",["193"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["191"],["192"],"React Hook useEffect has missing dependencies: 'setUserProfile' and 'userProfile'. Either include them or remove the dependency array.",["194"],"Assignments to the 'navbar' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'navbarToggle' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'navbarMenu' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'navbarLinksContainer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["195","196"],"Unnecessary escape character: \\+.",["197","198"],"Unnecessary escape character: \\$.",["199","200"],"Unnecessary escape character: \\..",["201","202"],["203","204"],["205","206"],["207","208"],["209","210"],["211","212"],["213","214"],["215","216"],"Unnecessary escape character: \\/.",["217","218"],["219","220"],["221","222"],["223","224"],["225","226"],["227","228"],"Unnecessary escape character: \\!.",["229","230"],["231","232"],"no-unused-vars","'hoursDiff' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props.match.params.eventId'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'props.match.params.userId'. Either include it or remove the dependency array.",["234"],"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"messageId":"239","fix":"240","desc":"241"},{"messageId":"242","fix":"243","desc":"244"},{"messageId":"239","fix":"245","desc":"241"},{"messageId":"242","fix":"246","desc":"244"},{"messageId":"239","fix":"247","desc":"241"},{"messageId":"242","fix":"248","desc":"244"},{"messageId":"239","fix":"249","desc":"241"},{"messageId":"242","fix":"250","desc":"244"},{"messageId":"239","fix":"251","desc":"241"},{"messageId":"242","fix":"252","desc":"244"},{"messageId":"239","fix":"253","desc":"241"},{"messageId":"242","fix":"254","desc":"244"},{"messageId":"239","fix":"255","desc":"241"},{"messageId":"242","fix":"256","desc":"244"},{"messageId":"239","fix":"257","desc":"241"},{"messageId":"242","fix":"258","desc":"244"},{"messageId":"239","fix":"259","desc":"241"},{"messageId":"242","fix":"260","desc":"244"},{"messageId":"239","fix":"261","desc":"241"},{"messageId":"242","fix":"262","desc":"244"},{"messageId":"239","fix":"263","desc":"241"},{"messageId":"242","fix":"264","desc":"244"},{"messageId":"239","fix":"265","desc":"241"},{"messageId":"242","fix":"266","desc":"244"},{"messageId":"239","fix":"267","desc":"241"},{"messageId":"242","fix":"268","desc":"244"},{"messageId":"239","fix":"269","desc":"241"},{"messageId":"242","fix":"270","desc":"244"},{"messageId":"239","fix":"271","desc":"241"},{"messageId":"242","fix":"272","desc":"244"},{"messageId":"239","fix":"273","desc":"241"},{"messageId":"242","fix":"274","desc":"244"},{"messageId":"239","fix":"275","desc":"241"},{"messageId":"242","fix":"276","desc":"244"},{"messageId":"239","fix":"277","desc":"241"},{"messageId":"242","fix":"278","desc":"244"},{"messageId":"239","fix":"279","desc":"241"},{"messageId":"242","fix":"280","desc":"244"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},"Update the dependencies array to be: [notifications, pageLoad, setUserProfile, userProfile]",{"range":"285","text":"286"},"Update the dependencies array to be: [pageLoad, setUserProfile, userProfile]",{"range":"287","text":"288"},"removeEscape",{"range":"289","text":"290"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"291","text":"292"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"293","text":"290"},{"range":"294","text":"292"},{"range":"295","text":"290"},{"range":"296","text":"292"},{"range":"297","text":"290"},{"range":"298","text":"292"},{"range":"299","text":"290"},{"range":"300","text":"292"},{"range":"301","text":"290"},{"range":"302","text":"292"},{"range":"303","text":"290"},{"range":"304","text":"292"},{"range":"305","text":"290"},{"range":"306","text":"292"},{"range":"307","text":"290"},{"range":"308","text":"292"},{"range":"309","text":"290"},{"range":"310","text":"292"},{"range":"311","text":"290"},{"range":"312","text":"292"},{"range":"313","text":"290"},{"range":"314","text":"292"},{"range":"315","text":"290"},{"range":"316","text":"292"},{"range":"317","text":"290"},{"range":"318","text":"292"},{"range":"319","text":"290"},{"range":"320","text":"292"},{"range":"321","text":"290"},{"range":"322","text":"292"},{"range":"323","text":"290"},{"range":"324","text":"292"},{"range":"325","text":"290"},{"range":"326","text":"292"},{"range":"327","text":"290"},{"range":"328","text":"292"},"Update the dependencies array to be: [props.match.params.eventId, signedUp]",{"range":"329","text":"330"},"Update the dependencies array to be: [props.match.params.userId]",{"range":"331","text":"332"},[988,998],"[notifications, pageLoad, setUserProfile, userProfile]",[926,936],"[pageLoad, setUserProfile, userProfile]",[2405,2406],"",[2405,2405],"\\",[2411,2412],[2411,2411],[2413,2414],[2413,2413],[2433,2434],[2433,2433],[2435,2436],[2435,2435],[2450,2451],[2450,2450],[2456,2457],[2456,2456],[2458,2459],[2458,2458],[2477,2478],[2477,2477],[2479,2480],[2479,2479],[2491,2492],[2491,2491],[2495,2496],[2495,2495],[2497,2498],[2497,2497],[2515,2516],[2515,2515],[2517,2518],[2517,2517],[2524,2525],[2524,2524],[2538,2539],[2538,2538],[2540,2541],[2540,2540],[2542,2543],[2542,2542],[1212,1222],"[props.match.params.eventId, signedUp]",[1837,1839],"[props.match.params.userId]"]